const ClaudeAgentSync = require('./.agent-context/claude-sync');

async function testRealCollaboration() {
  console.log('üîß AUGMENT AGENT: Testando colabora√ß√£o real...');
  
  const augmentAgent = ClaudeAgentSync.createAugmentAgent();
  
  // Conectar na thread existente
  await augmentAgent.startCollaboration(
    'TESTE: Colabora√ß√£o autom√°tica funcionando',
    'thread_1749213686295_7894096c'
  );
  
  console.log('‚úÖ Conectado na thread');
  
  // Enviar solicita√ß√£o real
  console.log('üì§ Enviando solicita√ß√£o para VSCode Agent...');
  
  await augmentAgent.requestWork(
    'TESTE URGENTE: Verificar se o servidor est√° rodando na porta 3000 e se o dashboard em http://localhost:3000 est√° acess√≠vel. Reportar status detalhado.',
    'urgent'
  );
  
  console.log('‚è≥ Aguardando resposta autom√°tica do VSCode Agent...');
  
  try {
    const response = await augmentAgent.middleware.waitForAgent(
      'thread_1749213686295_7894096c',
      'vscode',
      30000
    );
    
    console.log('‚úÖ VSCode Agent respondeu automaticamente!');
    console.log(`üì® Resposta: ${response.details.message}`);
    
    // Enviar segunda solicita√ß√£o
    console.log('\nüì§ Enviando segunda solicita√ß√£o...');
    
    await augmentAgent.requestWork(
      'Agora verifique se os componentes LiveMatches e UpcomingMatches est√£o renderizando dados ou se est√£o vazios.',
      'high'
    );
    
    const response2 = await augmentAgent.middleware.waitForAgent(
      'thread_1749213686295_7894096c',
      'vscode',
      30000
    );
    
    console.log('‚úÖ Segunda resposta recebida!');
    console.log(`üì® Resposta: ${response2.details.message}`);
    
    console.log('\nüéâ COLABORA√á√ÉO AUTOM√ÅTICA FUNCIONANDO PERFEITAMENTE!');
    
  } catch (error) {
    console.log('‚ùå Timeout ou erro na comunica√ß√£o:', error.message);
  }
}

testRealCollaboration().catch(console.error);
